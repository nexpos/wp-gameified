!function(e,i,s){"undefined"!=typeof module&&module.exports?module.exports=s():"function"==typeof define&&define.amd?define(i,s):e[i]=s()}(this,"bowser",function(){var B=!0;function t(s){function e(e){var i=s.match(e);return i&&1<i.length&&i[1]||""}function i(e){var i=s.match(e);return i&&1<i.length&&i[2]||""}var o,r=e(/(ipod|iphone|ipad)/i).toLowerCase(),n=!/like android/i.test(s)&&/android/i.test(s),t=/nexus\s*[0-6]\s*/i.test(s),a=!t&&/nexus\s*[0-9]+/i.test(s),d=/CrOS/.test(s),m=/silk/i.test(s),v=/sailfish/i.test(s),l=/tizen/i.test(s),c=/(web|hpw)(o|0)s/i.test(s),u=/windows phone/i.test(s),p=(/SamsungBrowser/i.test(s),!u&&/windows/i.test(s)),f=!r&&!m&&/macintosh/i.test(s),w=!n&&!v&&!l&&!c&&/linux/i.test(s),h=i(/edg([ea]|ios)\/(\d+(\.\d+)?)/i),b=e(/version\/(\d+(\.\d+)?)/i),g=/tablet/i.test(s)&&!/tablet pc/i.test(s),y=!g&&/[^-]mobi/i.test(s),k=/xbox/i.test(s);/opera/i.test(s)?o={name:"Opera",opera:B,version:b||e(/(?:opera|opr|opios)[\s\/](\d+(\.\d+)?)/i)}:/opr\/|opios/i.test(s)?o={name:"Opera",opera:B,version:e(/(?:opr|opios)[\s\/](\d+(\.\d+)?)/i)||b}:/SamsungBrowser/i.test(s)?o={name:"Samsung Internet for Android",samsungBrowser:B,version:b||e(/(?:SamsungBrowser)[\s\/](\d+(\.\d+)?)/i)}:/Whale/i.test(s)?o={name:"NAVER Whale browser",whale:B,version:e(/(?:whale)[\s\/](\d+(?:\.\d+)+)/i)}:/MZBrowser/i.test(s)?o={name:"MZ Browser",mzbrowser:B,version:e(/(?:MZBrowser)[\s\/](\d+(?:\.\d+)+)/i)}:/coast/i.test(s)?o={name:"Opera Coast",coast:B,version:b||e(/(?:coast)[\s\/](\d+(\.\d+)?)/i)}:/focus/i.test(s)?o={name:"Focus",focus:B,version:e(/(?:focus)[\s\/](\d+(?:\.\d+)+)/i)}:/yabrowser/i.test(s)?o={name:"Yandex Browser",yandexbrowser:B,version:b||e(/(?:yabrowser)[\s\/](\d+(\.\d+)?)/i)}:/ucbrowser/i.test(s)?o={name:"UC Browser",ucbrowser:B,version:e(/(?:ucbrowser)[\s\/](\d+(?:\.\d+)+)/i)}:/mxios/i.test(s)?o={name:"Maxthon",maxthon:B,version:e(/(?:mxios)[\s\/](\d+(?:\.\d+)+)/i)}:/epiphany/i.test(s)?o={name:"Epiphany",epiphany:B,version:e(/(?:epiphany)[\s\/](\d+(?:\.\d+)+)/i)}:/puffin/i.test(s)?o={name:"Puffin",puffin:B,version:e(/(?:puffin)[\s\/](\d+(?:\.\d+)?)/i)}:/sleipnir/i.test(s)?o={name:"Sleipnir",sleipnir:B,version:e(/(?:sleipnir)[\s\/](\d+(?:\.\d+)+)/i)}:/k-meleon/i.test(s)?o={name:"K-Meleon",kMeleon:B,version:e(/(?:k-meleon)[\s\/](\d+(?:\.\d+)+)/i)}:u?(o={name:"Windows Phone",osname:"Windows Phone",windowsphone:B},h?(o.msedge=B,o.version=h):(o.msie=B,o.version=e(/iemobile\/(\d+(\.\d+)?)/i))):/msie|trident/i.test(s)?o={name:"Internet Explorer",msie:B,version:e(/(?:msie |rv:)(\d+(\.\d+)?)/i)}:d?o={name:"Chrome",osname:"Chrome OS",chromeos:B,chromeBook:B,chrome:B,version:e(/(?:chrome|crios|crmo)\/(\d+(\.\d+)?)/i)}:/edg([ea]|ios)/i.test(s)?o={name:"Microsoft Edge",msedge:B,version:h}:/vivaldi/i.test(s)?o={name:"Vivaldi",vivaldi:B,version:e(/vivaldi\/(\d+(\.\d+)?)/i)||b}:v?o={name:"Sailfish",osname:"Sailfish OS",sailfish:B,version:e(/sailfish\s?browser\/(\d+(\.\d+)?)/i)}:/seamonkey\//i.test(s)?o={name:"SeaMonkey",seamonkey:B,version:e(/seamonkey\/(\d+(\.\d+)?)/i)}:/firefox|iceweasel|fxios/i.test(s)?(o={name:"Firefox",firefox:B,version:e(/(?:firefox|iceweasel|fxios)[ \/](\d+(\.\d+)?)/i)},/\((mobile|tablet);[^\)]*rv:[\d\.]+\)/i.test(s)&&(o.firefoxos=B,o.osname="Firefox OS")):m?o={name:"Amazon Silk",silk:B,version:e(/silk\/(\d+(\.\d+)?)/i)}:/phantom/i.test(s)?o={name:"PhantomJS",phantom:B,version:e(/phantomjs\/(\d+(\.\d+)?)/i)}:/slimerjs/i.test(s)?o={name:"SlimerJS",slimer:B,version:e(/slimerjs\/(\d+(\.\d+)?)/i)}:/blackberry|\bbb\d+/i.test(s)||/rim\stablet/i.test(s)?o={name:"BlackBerry",osname:"BlackBerry OS",blackberry:B,version:b||e(/blackberry[\d]+\/(\d+(\.\d+)?)/i)}:c?(o={name:"WebOS",osname:"WebOS",webos:B,version:b||e(/w(?:eb)?osbrowser\/(\d+(\.\d+)?)/i)},/touchpad\//i.test(s)&&(o.touchpad=B)):/bada/i.test(s)?o={name:"Bada",osname:"Bada",bada:B,version:e(/dolfin\/(\d+(\.\d+)?)/i)}:l?o={name:"Tizen",osname:"Tizen",tizen:B,version:e(/(?:tizen\s?)?browser\/(\d+(\.\d+)?)/i)||b}:/qupzilla/i.test(s)?o={name:"QupZilla",qupzilla:B,version:e(/(?:qupzilla)[\s\/](\d+(?:\.\d+)+)/i)||b}:/chromium/i.test(s)?o={name:"Chromium",chromium:B,version:e(/(?:chromium)[\s\/](\d+(?:\.\d+)?)/i)||b}:/chrome|crios|crmo/i.test(s)?o={name:"Chrome",chrome:B,version:e(/(?:chrome|crios|crmo)\/(\d+(\.\d+)?)/i)}:n?o={name:"Android",version:b}:/safari|applewebkit/i.test(s)?(o={name:"Safari",safari:B},b&&(o.version=b)):r?(o={name:"iphone"==r?"iPhone":"ipad"==r?"iPad":"iPod"},b&&(o.version=b)):o=/googlebot/i.test(s)?{name:"Googlebot",googlebot:B,version:e(/googlebot\/(\d+(\.\d+))/i)||b}:{name:e(/^(.*)\/(.*) /),version:i(/^(.*)\/(.*) /)},!o.msedge&&/(apple)?webkit/i.test(s)?(/(apple)?webkit\/537\.36/i.test(s)?(o.name=o.name||"Blink",o.blink=B):(o.name=o.name||"Webkit",o.webkit=B),!o.version&&b&&(o.version=b)):!o.opera&&/gecko\//i.test(s)&&(o.name=o.name||"Gecko",o.gecko=B,o.version=o.version||e(/gecko\/(\d+(\.\d+)?)/i)),o.windowsphone||!n&&!o.silk?!o.windowsphone&&r?(o[r]=B,o.ios=B,o.osname="iOS"):f?(o.mac=B,o.osname="macOS"):k?(o.xbox=B,o.osname="Xbox"):p?(o.windows=B,o.osname="Windows"):w&&(o.linux=B,o.osname="Linux"):(o.android=B,o.osname="Android");var x="";o.windows?x=function(e){switch(e){case"NT":return"NT";case"XP":return"XP";case"NT 5.0":return"2000";case"NT 5.1":return"XP";case"NT 5.2":return"2003";case"NT 6.0":return"Vista";case"NT 6.1":return"7";case"NT 6.2":return"8";case"NT 6.3":return"8.1";case"NT 10.0":return"10";default:return}}(e(/Windows ((NT|XP)( \d\d?.\d)?)/i)):o.windowsphone?x=e(/windows phone (?:os)?\s?(\d+(\.\d+)*)/i):o.mac?x=(x=e(/Mac OS X (\d+([_\.\s]\d+)*)/i)).replace(/[_\s]/g,"."):r?x=(x=e(/os (\d+([_\s]\d+)*) like mac os x/i)).replace(/[_\s]/g,"."):n?x=e(/android[ \/-](\d+(\.\d+)*)/i):o.webos?x=e(/(?:web|hpw)os\/(\d+(\.\d+)*)/i):o.blackberry?x=e(/rim\stablet\sos\s(\d+(\.\d+)*)/i):o.bada?x=e(/bada\/(\d+(\.\d+)*)/i):o.tizen&&(x=e(/tizen[\/\s](\d+(\.\d+)*)/i)),x&&(o.osversion=x);var S=!o.windows&&x.split(".")[0];return g||a||"ipad"==r||n&&(3==S||4<=S&&!y)||o.silk?o.tablet=B:(y||"iphone"==r||"ipod"==r||n||t||o.blackberry||o.webos||o.bada)&&(o.mobile=B),o.msedge||o.msie&&10<=o.version||o.yandexbrowser&&15<=o.version||o.vivaldi&&1<=o.version||o.chrome&&20<=o.version||o.samsungBrowser&&4<=o.version||o.whale&&1===O([o.version,"1.0"])||o.mzbrowser&&1===O([o.version,"6.0"])||o.focus&&1===O([o.version,"1.0"])||o.firefox&&20<=o.version||o.safari&&6<=o.version||o.opera&&10<=o.version||o.ios&&o.osversion&&6<=o.osversion.split(".")[0]||o.blackberry&&10.1<=o.version||o.chromium&&20<=o.version?o.a=B:o.msie&&o.version<10||o.chrome&&o.version<20||o.firefox&&o.version<20||o.safari&&o.version<6||o.opera&&o.version<10||o.ios&&o.osversion&&o.osversion.split(".")[0]<6||o.chromium&&o.version<20?o.c=B:o.x=B,o}var a=t("undefined"!=typeof navigator&&navigator.userAgent||"");function o(e){return e.split(".").length}function r(e,i){var s,o=[];if(Array.prototype.map)return Array.prototype.map.call(e,i);for(s=0;s<e.length;s++)o.push(i(e[s]));return o}function O(e){for(var s=Math.max(o(e[0]),o(e[1])),i=r(e,function(e){var i=s-o(e);return r((e+=new Array(i+1).join(".0")).split("."),function(e){return new Array(20-e.length).join("0")+e}).reverse()});0<=--s;){if(i[0][s]>i[1][s])return 1;if(i[0][s]!==i[1][s])return-1;if(0===s)return 0}}function n(e,i,s){var o=a;"string"==typeof i&&(s=i,i=void 0),void 0===i&&(i=!1),s&&(o=t(s));var r=""+o.version;for(var n in e)if(e.hasOwnProperty(n)&&o[n]){if("string"!=typeof e[n])throw new Error("Browser version in the minVersion map should be a string: "+n+": "+String(e));return O([r,e[n]])<0}return i}return a.test=function(e){for(var i=0;i<e.length;++i){var s=e[i];if("string"==typeof s&&s in a)return!0}return!1},a.isUnsupportedBrowser=n,a.compareVersions=O,a.check=function(e,i,s){return!n(e,i,s)},a._detect=t,a.detect=t,a}),jQuery(document).ready(function(e){"ontouchstart"in document.documentElement&&e("body").removeClass("no-touch"),bowser.msie&&11==bowser.version?e("body").addClass("ie-11"):bowser.safari&&e("body").addClass("safari")});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
