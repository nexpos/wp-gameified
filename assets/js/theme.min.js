!function(e,i,n){"undefined"!=typeof module&&module.exports?module.exports=n():"function"==typeof define&&define.amd?define(i,n):e[i]=n()}(this,"bowser",function(){var S=!0;function r(n){function e(e){var i=n.match(e);return i&&1<i.length&&i[1]||""}function i(e){var i=n.match(e);return i&&1<i.length&&i[2]||""}var s,o=e(/(ipod|iphone|ipad)/i).toLowerCase(),t=!/like android/i.test(n)&&/android/i.test(n),r=/nexus\s*[0-6]\s*/i.test(n),a=!r&&/nexus\s*[0-9]+/i.test(n),d=/CrOS/.test(n),m=/silk/i.test(n),l=/sailfish/i.test(n),c=/tizen/i.test(n),f=/(web|hpw)(o|0)s/i.test(n),u=/windows phone/i.test(n),v=(/SamsungBrowser/i.test(n),!u&&/windows/i.test(n)),p=!o&&!m&&/macintosh/i.test(n),b=!t&&!l&&!c&&!f&&/linux/i.test(n),h=i(/edg([ea]|ios)\/(\d+(\.\d+)?)/i),y=e(/version\/(\d+(\.\d+)?)/i),w=/tablet/i.test(n)&&!/tablet pc/i.test(n),g=!w&&/[^-]mobi/i.test(n),k=/xbox/i.test(n);/opera/i.test(n)?s={name:"Opera",opera:S,version:y||e(/(?:opera|opr|opios)[\s\/](\d+(\.\d+)?)/i)}:/opr\/|opios/i.test(n)?s={name:"Opera",opera:S,version:e(/(?:opr|opios)[\s\/](\d+(\.\d+)?)/i)||y}:/SamsungBrowser/i.test(n)?s={name:"Samsung Internet for Android",samsungBrowser:S,version:y||e(/(?:SamsungBrowser)[\s\/](\d+(\.\d+)?)/i)}:/Whale/i.test(n)?s={name:"NAVER Whale browser",whale:S,version:e(/(?:whale)[\s\/](\d+(?:\.\d+)+)/i)}:/MZBrowser/i.test(n)?s={name:"MZ Browser",mzbrowser:S,version:e(/(?:MZBrowser)[\s\/](\d+(?:\.\d+)+)/i)}:/coast/i.test(n)?s={name:"Opera Coast",coast:S,version:y||e(/(?:coast)[\s\/](\d+(\.\d+)?)/i)}:/focus/i.test(n)?s={name:"Focus",focus:S,version:e(/(?:focus)[\s\/](\d+(?:\.\d+)+)/i)}:/yabrowser/i.test(n)?s={name:"Yandex Browser",yandexbrowser:S,version:y||e(/(?:yabrowser)[\s\/](\d+(\.\d+)?)/i)}:/ucbrowser/i.test(n)?s={name:"UC Browser",ucbrowser:S,version:e(/(?:ucbrowser)[\s\/](\d+(?:\.\d+)+)/i)}:/mxios/i.test(n)?s={name:"Maxthon",maxthon:S,version:e(/(?:mxios)[\s\/](\d+(?:\.\d+)+)/i)}:/epiphany/i.test(n)?s={name:"Epiphany",epiphany:S,version:e(/(?:epiphany)[\s\/](\d+(?:\.\d+)+)/i)}:/puffin/i.test(n)?s={name:"Puffin",puffin:S,version:e(/(?:puffin)[\s\/](\d+(?:\.\d+)?)/i)}:/sleipnir/i.test(n)?s={name:"Sleipnir",sleipnir:S,version:e(/(?:sleipnir)[\s\/](\d+(?:\.\d+)+)/i)}:/k-meleon/i.test(n)?s={name:"K-Meleon",kMeleon:S,version:e(/(?:k-meleon)[\s\/](\d+(?:\.\d+)+)/i)}:u?(s={name:"Windows Phone",osname:"Windows Phone",windowsphone:S},h?(s.msedge=S,s.version=h):(s.msie=S,s.version=e(/iemobile\/(\d+(\.\d+)?)/i))):/msie|trident/i.test(n)?s={name:"Internet Explorer",msie:S,version:e(/(?:msie |rv:)(\d+(\.\d+)?)/i)}:d?s={name:"Chrome",osname:"Chrome OS",chromeos:S,chromeBook:S,chrome:S,version:e(/(?:chrome|crios|crmo)\/(\d+(\.\d+)?)/i)}:/edg([ea]|ios)/i.test(n)?s={name:"Microsoft Edge",msedge:S,version:h}:/vivaldi/i.test(n)?s={name:"Vivaldi",vivaldi:S,version:e(/vivaldi\/(\d+(\.\d+)?)/i)||y}:l?s={name:"Sailfish",osname:"Sailfish OS",sailfish:S,version:e(/sailfish\s?browser\/(\d+(\.\d+)?)/i)}:/seamonkey\//i.test(n)?s={name:"SeaMonkey",seamonkey:S,version:e(/seamonkey\/(\d+(\.\d+)?)/i)}:/firefox|iceweasel|fxios/i.test(n)?(s={name:"Firefox",firefox:S,version:e(/(?:firefox|iceweasel|fxios)[ \/](\d+(\.\d+)?)/i)},/\((mobile|tablet);[^\)]*rv:[\d\.]+\)/i.test(n)&&(s.firefoxos=S,s.osname="Firefox OS")):m?s={name:"Amazon Silk",silk:S,version:e(/silk\/(\d+(\.\d+)?)/i)}:/phantom/i.test(n)?s={name:"PhantomJS",phantom:S,version:e(/phantomjs\/(\d+(\.\d+)?)/i)}:/slimerjs/i.test(n)?s={name:"SlimerJS",slimer:S,version:e(/slimerjs\/(\d+(\.\d+)?)/i)}:/blackberry|\bbb\d+/i.test(n)||/rim\stablet/i.test(n)?s={name:"BlackBerry",osname:"BlackBerry OS",blackberry:S,version:y||e(/blackberry[\d]+\/(\d+(\.\d+)?)/i)}:f?(s={name:"WebOS",osname:"WebOS",webos:S,version:y||e(/w(?:eb)?osbrowser\/(\d+(\.\d+)?)/i)},/touchpad\//i.test(n)&&(s.touchpad=S)):/bada/i.test(n)?s={name:"Bada",osname:"Bada",bada:S,version:e(/dolfin\/(\d+(\.\d+)?)/i)}:c?s={name:"Tizen",osname:"Tizen",tizen:S,version:e(/(?:tizen\s?)?browser\/(\d+(\.\d+)?)/i)||y}:/qupzilla/i.test(n)?s={name:"QupZilla",qupzilla:S,version:e(/(?:qupzilla)[\s\/](\d+(?:\.\d+)+)/i)||y}:/chromium/i.test(n)?s={name:"Chromium",chromium:S,version:e(/(?:chromium)[\s\/](\d+(?:\.\d+)?)/i)||y}:/chrome|crios|crmo/i.test(n)?s={name:"Chrome",chrome:S,version:e(/(?:chrome|crios|crmo)\/(\d+(\.\d+)?)/i)}:t?s={name:"Android",version:y}:/safari|applewebkit/i.test(n)?(s={name:"Safari",safari:S},y&&(s.version=y)):o?(s={name:"iphone"==o?"iPhone":"ipad"==o?"iPad":"iPod"},y&&(s.version=y)):s=/googlebot/i.test(n)?{name:"Googlebot",googlebot:S,version:e(/googlebot\/(\d+(\.\d+))/i)||y}:{name:e(/^(.*)\/(.*) /),version:i(/^(.*)\/(.*) /)},!s.msedge&&/(apple)?webkit/i.test(n)?(/(apple)?webkit\/537\.36/i.test(n)?(s.name=s.name||"Blink",s.blink=S):(s.name=s.name||"Webkit",s.webkit=S),!s.version&&y&&(s.version=y)):!s.opera&&/gecko\//i.test(n)&&(s.name=s.name||"Gecko",s.gecko=S,s.version=s.version||e(/gecko\/(\d+(\.\d+)?)/i)),s.windowsphone||!t&&!s.silk?!s.windowsphone&&o?(s[o]=S,s.ios=S,s.osname="iOS"):p?(s.mac=S,s.osname="macOS"):k?(s.xbox=S,s.osname="Xbox"):v?(s.windows=S,s.osname="Windows"):b&&(s.linux=S,s.osname="Linux"):(s.android=S,s.osname="Android");var x="";s.windows?x=function(e){switch(e){case"NT":return"NT";case"XP":return"XP";case"NT 5.0":return"2000";case"NT 5.1":return"XP";case"NT 5.2":return"2003";case"NT 6.0":return"Vista";case"NT 6.1":return"7";case"NT 6.2":return"8";case"NT 6.3":return"8.1";case"NT 10.0":return"10";default:return}}(e(/Windows ((NT|XP)( \d\d?.\d)?)/i)):s.windowsphone?x=e(/windows phone (?:os)?\s?(\d+(\.\d+)*)/i):s.mac?x=(x=e(/Mac OS X (\d+([_\.\s]\d+)*)/i)).replace(/[_\s]/g,"."):o?x=(x=e(/os (\d+([_\s]\d+)*) like mac os x/i)).replace(/[_\s]/g,"."):t?x=e(/android[ \/-](\d+(\.\d+)*)/i):s.webos?x=e(/(?:web|hpw)os\/(\d+(\.\d+)*)/i):s.blackberry?x=e(/rim\stablet\sos\s(\d+(\.\d+)*)/i):s.bada?x=e(/bada\/(\d+(\.\d+)*)/i):s.tizen&&(x=e(/tizen[\/\s](\d+(\.\d+)*)/i)),x&&(s.osversion=x);var C=!s.windows&&x.split(".")[0];return w||a||"ipad"==o||t&&(3==C||4<=C&&!g)||s.silk?s.tablet=S:(g||"iphone"==o||"ipod"==o||t||r||s.blackberry||s.webos||s.bada)&&(s.mobile=S),s.msedge||s.msie&&10<=s.version||s.yandexbrowser&&15<=s.version||s.vivaldi&&1<=s.version||s.chrome&&20<=s.version||s.samsungBrowser&&4<=s.version||s.whale&&1===P([s.version,"1.0"])||s.mzbrowser&&1===P([s.version,"6.0"])||s.focus&&1===P([s.version,"1.0"])||s.firefox&&20<=s.version||s.safari&&6<=s.version||s.opera&&10<=s.version||s.ios&&s.osversion&&6<=s.osversion.split(".")[0]||s.blackberry&&10.1<=s.version||s.chromium&&20<=s.version?s.a=S:s.msie&&s.version<10||s.chrome&&s.version<20||s.firefox&&s.version<20||s.safari&&s.version<6||s.opera&&s.version<10||s.ios&&s.osversion&&s.osversion.split(".")[0]<6||s.chromium&&s.version<20?s.c=S:s.x=S,s}var a=r("undefined"!=typeof navigator&&navigator.userAgent||"");function s(e){return e.split(".").length}function o(e,i){var n,s=[];if(Array.prototype.map)return Array.prototype.map.call(e,i);for(n=0;n<e.length;n++)s.push(i(e[n]));return s}function P(e){for(var n=Math.max(s(e[0]),s(e[1])),i=o(e,function(e){var i=n-s(e);return o((e+=new Array(i+1).join(".0")).split("."),function(e){return new Array(20-e.length).join("0")+e}).reverse()});0<=--n;){if(i[0][n]>i[1][n])return 1;if(i[0][n]!==i[1][n])return-1;if(0===n)return 0}}function t(e,i,n){var s=a;"string"==typeof i&&(n=i,i=void 0),void 0===i&&(i=!1),n&&(s=r(n));var o=""+s.version;for(var t in e)if(e.hasOwnProperty(t)&&s[t]){if("string"!=typeof e[t])throw new Error("Browser version in the minVersion map should be a string: "+t+": "+String(e));return P([o,e[t]])<0}return i}return a.test=function(e){for(var i=0;i<e.length;++i){var n=e[i];if("string"==typeof n&&n in a)return!0}return!1},a.isUnsupportedBrowser=t,a.compareVersions=P,a.check=function(e,i,n){return!t(e,i,n)},a._detect=r,a.detect=r,a}),function(s){s.fn.niftyNav=function(e){$nifty_toggle=s("#nifty-nav-toggle"),$nifty_panel=s(".nifty-panel"),$nifty_nav_item=s(".nifty-nav-item"),$nifty_parent=s(".nifty-panel ul li");var i,n=s.extend({subMenus:!1,mask:!0,itemClickClose:!0,panelPosition:"absolute",subMenuParentLink:!1},e);(subMenus=n.subMenus,mask=n.mask,itemClickClose=n.itemClickClose,panelPosition=n.panelPosition,subMenuParentLink=n.subMenuParentLink,niftyRemove=function(){s(".nifty-mask").remove()},niftyUnmask=function(){s(".nifty-mask").animate({opacity:0}),setTimeout(niftyRemove,800)},$nifty_toggle.click(function(){s(this).toggleClass("nifty-active"),$nifty_panel.slideToggle(500).css("position",panelPosition),"fixed"==panelPosition&&s("body").toggleClass("nifty-lock"),!0===mask&&(0<s(".nifty-mask").length?niftyUnmask():(s("body").append('<div class="nifty-mask"></div>'),s(".nifty-mask").animate({opacity:1}),s(".nifty-mask").click(function(){$nifty_panel.slideUp(500),niftyUnmask(),$nifty_toggle.removeClass("nifty-active"),"fixed"==panelPosition&&s("body").removeClass("nifty-lock")})))}),!0===itemClickClose&&$nifty_nav_item.click(function(){$nifty_panel.slideUp(500),niftyUnmask(),$nifty_toggle.removeClass("nifty-active"),"fixed"==panelPosition&&s("body").removeClass("nifty-lock")}),!0===subMenus)&&(!1===subMenuParentLink&&s(".nifty-panel .menu-item-has-children > a").click(function(e){e.preventDefault()}),$nifty_parent.click(function(){(i=s(this)).find(".sub-menu").slideToggle(),i.toggleClass("nifty-menu-opened")}))}}(jQuery),jQuery(document).ready(function(e){"ontouchstart"in document.documentElement&&e("body").removeClass("no-touch"),bowser.msie&&11==bowser.version?e("body").addClass("ie-11"):bowser.safari&&e("body").addClass("safari"),e("#nifty-nav-toggle").niftyNav(),e(".gform_wrapper form .animated").find("input, select, textarea").on("focusin",function(){e(this).parents(".animated").children("label").addClass("active-position active-weight active-color"),e(".gform_wrapper form .animated").find("input, select, textarea").on("focusout",function(){""!==e(this).val()?e(this).parents(".animated").children("label").removeClass("active-weight"):e(this).parents(".animated").children("label").removeClass("active-position active-weight active-color")})})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
